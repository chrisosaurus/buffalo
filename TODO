codes TODO:
codes.* will eventually become its own library, maybe stw (simple termcode wrapper) 'stew'


buffalo TODO:
deal with text off the right of the screen (wordwrap OR scroll over, later seems easier)
save as
open(run time specified file, possibly with another already open)
goto matching bracket (simple 'stack' counter, will fail for non literals but meh)
syntax highlighting
undo

bugs:
fix search backwards so it will search cur.l[ 0 : cur.o ] <- need to find a tidy solution
highlighting when selection start is before screen and selection end is on screen, doesnt highlight but should <- hard to do in current model
optimisation of drawing when scrolling <- not really a priority
If you type off the screen (and thus the sele goes off the screen) then everything after becomes selected (as sele is never encountered)
should be able to set sele before sels, keep wanting to do this
inserts a single blank line at the end of file on reading, there on subsequent loads, viewing the file in vim doesnt show this.

tidyup:
i_backspace, should seperate into 2 methods. One is i_backspace which deals with moving selection and then calls i_delete which removes previous char.
i_insert, should also be 2 funcs. One sets/extends selection and then calls the other, tab and newline should use the former. Reading a new file should use the latter.

regarding selectiong starting before screen, as sstart is always initially fstart, as we move sstart down we can check if we encounter sels, and if so record that sels
is before the start of the screen.

regarding open/save as, we could make an argument for these being shell features. Bufallo should always be told what file to open on invocation.
If the user wants to save under a different name, they can C-z, cp, fg, save, and then move the files around.
